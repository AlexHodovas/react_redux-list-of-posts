{"version":3,"sources":["redux/actions.js","redux/loadPeducer.js","redux/postListReducer.js","redux/errorLoadDataReducer.js","redux/searchingPostsReducer.js","redux/isSearchingPostsReducer.js","api/usersApi.js","api/postsApi.js","api/commentsApi.js","helpers/getPostsWithUsersAndComments.js","redux/store.js","components/User.js","components/Comment.js","components/CommentList.js","components/Post.js","components/PostList.js","App.js","helpers/debounce.js","index.js"],"names":["handleSuccess","posts","type","loadReducer","state","arguments","length","undefined","postListReducer","action","filter","post","id","map","Object","objectSpread2","comments","comment","errorLoadDataReducer","searchingPostsReducer","searchingPosts","isSearchingPostsReducer","getUsersResolvedPromise","response","result","regenerator_default","a","async","_context","prev","next","awrap","fetch","sent","json","abrupt","stop","getPostsResolvedPromise","getCommentsResolvedPromise","getPostsWithUsersAndComments","postsArr","usersArr","commentsArr","user","find","userId","postId","getPosts","getIsSearchingPosts","isSearching","getSearchingPosts","getLoading","isLoading","getError","hasError","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","User","_ref","userOne","react_default","createElement","className","name","email","address","city","connect","dispatch","removeComment","handleRemoveComment","role","aria-label","onClick","body","CommentList","components_Comment","key","removePost","handleRemovePost","title","components_User","components_CommentList","components_Post","loading","_ref2","t0","t1","Promise","t2","t3","t4","t5","t6","all","call","slicedToArray","t7","handleResponseSuccess","debounceHandler","func","delay","timer","clearTimeout","_len","args","Array","_key","setTimeout","apply","concat","debounce","value","searchQuery","toLowerCase","includes","Fragment","Dimmer","active","Loader","size","postsStyle","document","querySelector","style","width","margin","placeholder","onChange","e","target","components_PostList","ReactDOM","render","es","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.ce15a9ab.chunk.js","sourcesContent":["// action types\nexport const START_LOADING = 'START_LOADING';\nexport const HANDLE_SUCCESS = 'HANDLE_SUCCESS';\nexport const SEARCHING_POSTS = 'SEARCHING_POSTS';\nexport const HANDLE_ERROR = 'HANDLE_ERROR';\nexport const HANDLE_REMOVE_POST = 'HANDLE_REMOVE';\nexport const HANDLE_REMOVE_COMMENT = 'HANDLE_REMOVE_COMMENT';\n\n// action creators\nexport const startLoading = () => ({ type: START_LOADING });\nexport const handleSuccess = posts => (\n  { type: HANDLE_SUCCESS, posts }\n);\nexport const handleSearch = (searchingPosts) => (\n  { type: SEARCHING_POSTS, searchingPosts }\n);\nexport const handleError = () => ({ type: HANDLE_ERROR });\nexport const handleRemovePost = (id) => (\n  { type: HANDLE_REMOVE_POST, id }\n);\nexport const handleRemoveComment = (id) => (\n  { type: HANDLE_REMOVE_COMMENT, id }\n);\n","import {\n  START_LOADING,\n  HANDLE_SUCCESS,\n  HANDLE_ERROR,\n} from './actions';\n\nconst loadReducer = (state = false, action) => {\n  switch (action.type) {\n    case START_LOADING:\n      return true;\n\n    case HANDLE_SUCCESS:\n      return false;\n\n    case HANDLE_ERROR:\n      return false;\n\n    default:\n      return state;\n  }\n};\n\nexport default loadReducer;\n","import {\n  HANDLE_SUCCESS,\n  HANDLE_REMOVE_POST,\n  HANDLE_REMOVE_COMMENT,\n} from './actions';\n\nconst postListReducer = (state = [], action) => {\n  switch (action.type) {\n    case HANDLE_SUCCESS:\n      return action.posts;\n\n    case HANDLE_REMOVE_POST:\n      return state.filter(post => post.id !== action.id);\n\n    case HANDLE_REMOVE_COMMENT:\n      return state.map(post =>({\n        ...post,\n        comments: post.comments\n          .filter(comment => comment.id !== action.id)\n      }))\n\n    default:\n      return state;\n  }\n};\n\nexport default postListReducer;\n","import {\n  START_LOADING,\n  HANDLE_SUCCESS,\n  HANDLE_ERROR,\n} from './actions';\n\nconst errorLoadDataReducer = (state = false, action) => {\n  switch (action.type) {\n    case START_LOADING:\n      return false;\n\n    case HANDLE_SUCCESS:\n      return false;\n\n    case HANDLE_ERROR:\n      return true;\n\n    default:\n      return state;\n  }\n};\n\nexport default errorLoadDataReducer;\n","import {\n  SEARCHING_POSTS,\n} from './actions';\n\nconst searchingPostsReducer = (state = [], action) => {\n  switch (action.type) {\n\n    case SEARCHING_POSTS:\n      return action.searchingPosts;\n\n    default:\n      return state;\n  }\n};\n\nexport default searchingPostsReducer;\n","import {\n  SEARCHING_POSTS,\n} from './actions';\n\nconst isSearchingPostsReducer = (state = false, action) => {\n  switch (action.type) {\n\n    case SEARCHING_POSTS:\n        return true;\n\n    default:\n      return state;\n  }\n};\n\nexport default isSearchingPostsReducer;\n","export const getUsersResolvedPromise = async() => {\n  const response = await fetch('https://jsonplaceholder.typicode.com/users');\n  const result = await response.json();\n\n  return result;\n};\n","export const getPostsResolvedPromise = async() => {\n  const response = await fetch('https://jsonplaceholder.typicode.com/posts');\n  const result = await response.json();\n\n  return result;\n};\n","export const getCommentsResolvedPromise = async() => {\n  const response = await fetch('https://jsonplaceholder.typicode.com/comments');\n  const result = await response.json();\n\n  return result;\n};\n","export const getPostsWithUsersAndComments = (postsArr, usersArr, commentsArr) => (\n  postsArr.map(post => (\n    {\n      ...post,\n      user: usersArr.find(user => user.id === post.userId),\n      comments: commentsArr.filter(comment => comment.postId === post.id),\n    }\n  ))\n);\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport loadReducer from './loadPeducer';\nimport postListReducer from './postListReducer';\nimport errorLoadDataReducer from './errorLoadDataReducer';\nimport searchingPostsReducer from './searchingPostsReducer';\nimport isSearchingPostsReducer from './isSearchingPostsReducer';\nimport { getUsersResolvedPromise } from '../api/usersApi';\nimport { getPostsResolvedPromise } from '../api/postsApi';\nimport { getCommentsResolvedPromise } from '../api/commentsApi';\nimport { getPostsWithUsersAndComments } from '../helpers/getPostsWithUsersAndComments';\nimport {\n  startLoading,\n  handleSuccess,\n  handleSearch,\n  handleError,\n} from './actions';\n\n// selectors\nexport const getPosts = state => state.posts;\nexport const getIsSearchingPosts = state => state.isSearching;\nexport const getSearchingPosts = state => state.searchingPosts;\nexport const getLoading = state => state.isLoading;\nexport const getError = state => state.hasError;\n\nexport const loadData = () => {\n  return async(dispatch) => {\n    dispatch(startLoading())\n\n    try {\n      const [\n        postsArr,\n        usersArr,\n        commentsArr,\n      ] = await Promise.all([\n        await getPostsResolvedPromise(),\n        await getUsersResolvedPromise(),\n        await getCommentsResolvedPromise(),\n      ]);\n      dispatch(handleSuccess(getPostsWithUsersAndComments(postsArr, usersArr, commentsArr)));\n      dispatch(handleSearch(getPostsWithUsersAndComments(postsArr, usersArr, commentsArr)));\n    } catch (e) {\n      dispatch(handleError())\n    }\n  }\n}\n\nconst rootReducer = combineReducers({\n  isLoading: loadReducer,\n  posts: postListReducer,\n  hasError: errorLoadDataReducer,\n  searchingPosts: searchingPostsReducer,\n  isSearching: isSearchingPostsReducer,\n});\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport default store;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ userOne }) => (\n  <div className=\"user\">\n    {'written by '}\n    {userOne.name}\n    {<br />}\n    {userOne.email}\n    {<br />}\n    {userOne.address.city}\n  </div>\n);\n\nUser.propTypes = { userOne: PropTypes.objectOf(PropTypes.any).isRequired };\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n  handleRemoveComment\n} from '../redux/actions';\n\nconst Comment = ({ comment, removeComment }) => (\n  <div className=\"comment\">\n    <div className=\"comment-title\">\n      <span\n      className='delete-comments'\n      role='img'\n      aria-label=\"cancel\"\n      onClick={() => removeComment(comment.id)}\n    >\n      ❌\n    </span>\n    <p className=\"comment-title__id\">\n      {'Comment - '}\n      {comment.id}\n    </p>\n  </div>\n    <p className='comment-body'>\n      {comment.body}\n    </p>\n    <p className='comment-email'>\n      {'E-mail - '}\n      {comment.email}\n    </p>\n  </div>\n);\n\nconst mapDispatchToProps = dispatch => ({\n  removeComment: id => dispatch(handleRemoveComment(id))\n});\n\nComment.propTypes = {\n  comment: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    body: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default connect(\n  null, mapDispatchToProps\n)(Comment);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Comment from './Comment';\n\nconst CommentList = ({ comments }) => (\n  <div className=\"comments\">\n    <h2>Comments</h2>\n    { comments.map(comment => (\n      <Comment comment={comment} key={comment.id} />\n    )) }\n  </div>\n);\n\nCommentList.propTypes = {\n  comments: PropTypes.arrayOf(\n    PropTypes.object\n  ).isRequired,\n};\n\nexport default CommentList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport User from './User';\nimport CommentList from './CommentList';\nimport {\n  handleRemovePost\n} from '../redux/actions';\n\nconst Post = ({ post, removePost }) => {\n  const { id, title, body, comments, user } = post;\n\n  return (\n    <div className=\"post\">\n    <span\n      className='delete-post'\n      role='img'\n      aria-label=\"cancel\"\n      onClick={() => removePost(id)}\n    >\n      ❌\n    </span>\n    <User userOne={user} />\n    <h1 className=\"post-title\">\n      {'Post# - '}\n      {id}\n    </h1>\n    <p>\n      <span className='post-topic'> {'Topic - '}</span>\n      {title}\n    </p>\n    <p>{body}</p>\n    <CommentList comments={comments} />\n  </div>\n  )\n}\n\nconst mapDispatchToProps = dispatch => ({\n  removePost: id => dispatch(handleRemovePost(id))\n});\n\nPost.propTypes = {\n  post: PropTypes.shape({\n    userId: PropTypes.number.isRequired,\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    body: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default connect(\n  null, mapDispatchToProps\n)(Post);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n  getPosts,\n} from '../redux/store';\nimport Post from './Post';\n\nconst PostList = ({ posts }) => (\n  <div className=\"posts\">\n    { posts.map(post => (\n      <Post post={post} key={post.id} />\n    )) }\n  </div>\n);\n\nconst mapStateToProps = state => ({\n  posts: getPosts(state),\n});\n\nPostList.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default connect(mapStateToProps,null)(PostList);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Dimmer,\n  Loader\n} from 'semantic-ui-react';\nimport './App.css';\nimport { debounce } from './helpers/debounce';\nimport PostList from './components/PostList';\nimport {\n  loadData,\n  getIsSearchingPosts,\n  getLoading,\n  getPosts,\n  getSearchingPosts,\n  getError,\n} from './redux/store';\nimport {\n  handleSuccess,\n} from './redux/actions';\n\nconst App = ({\n  posts,\n  searchingPosts,\n  isLoading,\n  hasError,\n  isSearching,\n  loading,\n  handleResponseSuccess,\n}) => {\n\n  const loadAllData = () => {\n    loading();\n  }\n\n  const searchPosts = (value) => {\n    const searchQuery = value.toLowerCase();\n\n    handleResponseSuccess(\n      searchingPosts.filter(\n        ({ title, body }) => (\n          (title + body).toLowerCase().includes(searchQuery)\n        )\n      )\n    )\n  };\n\n  const debounceHandler = debounce(searchPosts, 1000);\n\n  if (hasError) {\n    return (\n      <p>\n        you have some problems with your network,\n        <br />\n        please refresh the page\n      </p>\n    );\n  }\n\n  if (!posts.length && !isSearching) {\n    return (\n      <>\n        <button\n          type=\"button\"\n          onClick={() => loadAllData()}\n        >\n          {isLoading ? 'Loading...' : 'Load'}\n        </button>\n        {isLoading ?\n        <Dimmer active>\n          <Loader size=\"huge\">LOADING.....</Loader>\n        </Dimmer>\n        : ''\n        }\n      </>\n    );\n  }\n\n  if (posts.length === 2) {\n    const postsStyle = document.querySelector('.posts').style;\n    postsStyle.width = `900px`;\n    postsStyle.margin = `20px auto`;\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of posts</h1>\n      <p className='posts-found'>\n        {posts.length === 0 ? `no posts exists`: `posts found - `}\n        {posts.length === 0 ? '' : posts.length}\n      </p>\n      <input\n        className=\"input\"\n        placeholder=\"Search for posts\"\n        onChange={e => debounceHandler(e.target.value)}\n      />\n      <PostList />\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  isSearching: getIsSearchingPosts(state),\n  isLoading: getLoading(state),\n  posts: getPosts(state),\n  searchingPosts: getSearchingPosts(state),\n  hasError: getError(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  loading: () => dispatch(loadData()),\n  handleResponseSuccess: posts => dispatch(handleSuccess(posts)),\n});\n\nexport default connect(\n  mapStateToProps, mapDispatchToProps\n)(App);\n","export const debounce = (func, delay) => {\n  let timer;\n\n  return (...args) => {\n    clearTimeout(timer);\n\n    timer = setTimeout(func, delay, ...args);\n  };\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}